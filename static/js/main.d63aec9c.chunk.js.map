{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","React","memo","todos","filterOption","filterQuery","onSelectTodo","todoId","preparedTodos","option","query","filteredTodos","filter","todo","title","toLowerCase","includes","trim","completed","getFilteredTodos","className","map","index","id","type","role","tabIndex","onClick","onKeyUp","classNames","TodoFilter","onFilterQueryChange","onDebounceAppliedQuery","onFilterOptionChange","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","loading","setLoading","useEffect","userId","finally","href","email","name","App","todosFromServer","setTodosFromServer","filterOptionByStatus","setFilterOptionByStatus","setFilterQuery","selectedTodo","setSelectedTodo","isLoading","setIsLoading","appliedFilterQuery","setAppliedFilterQuery","debounceAppliedQuery","useCallback","debounce","response","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d63aec9c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\nfunction getFilteredTodos(\n  todos: Todo[],\n  option: string,\n  query: string,\n): Todo[] {\n  const filteredTodos = !query\n    ? [...todos]\n    : [...todos].filter(\n      todo => todo.title.toLowerCase().includes(query.toLowerCase().trim()),\n    );\n\n  switch (option) {\n    case 'all':\n      return filteredTodos;\n    case 'active':\n      return filteredTodos.filter(todo => todo.completed === false);\n    case 'completed':\n      return filteredTodos.filter(todo => todo.completed === true);\n    default:\n      return filteredTodos;\n  }\n}\n\ntype Props = {\n  todos: Todo[];\n  filterOption: string;\n  filterQuery: string;\n  onSelectTodo: React.Dispatch<React.SetStateAction<Todo | null>>\n  todoId: number | null;\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  filterOption,\n  filterQuery,\n  onSelectTodo,\n  todoId,\n}) => {\n  const preparedTodos = getFilteredTodos(todos, filterOption, filterQuery);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {preparedTodos.map((todo, index) => {\n          const { id, completed, title } = todo;\n\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={id}>\n              <td className=\"is-vcentered\">{id}</td>\n              {completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                )\n                : (\n                  <td className=\"is-vcentered\" />\n                )}\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={completed ? 'has-text-success' : 'has-text-danger'}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span\n                    className=\"icon\"\n                    role=\"button\"\n                    tabIndex={index}\n                    onClick={() => onSelectTodo(todo)}\n                    onKeyUp={() => {}}\n                  >\n                    <i className={classNames(\n                      'far',\n                      { 'fa-eye': todoId !== id },\n                      { 'fa-eye-slash': todoId === id },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n});\n","import React from 'react';\n\ntype Props = {\n  filterQuery: string,\n  onFilterQueryChange: React.Dispatch<React.SetStateAction<string>>,\n  onDebounceAppliedQuery: React.Dispatch<React.SetStateAction<string>>,\n  filterOption: string,\n  onFilterOptionChange: React.Dispatch<React.SetStateAction<string>>\n};\n\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  filterQuery,\n  onFilterQueryChange,\n  onDebounceAppliedQuery,\n  filterOption,\n  onFilterOptionChange,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterOption}\n            onChange={e => onFilterOptionChange(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterQuery}\n          onChange={(e) => {\n            onFilterQueryChange(e.target.value);\n            onDebounceAppliedQuery(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filterQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onFilterQueryChange('');\n                onDebounceAppliedQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onSelectTodo: React.Dispatch<React.SetStateAction<Todo | null>>\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onSelectTodo }) => {\n  const [user, setUser] = useState<User>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              {user && (\n                <a href={user.email}>\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useCallback } from 'react';\nimport debounce from 'lodash.debounce';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [filterOptionByStatus, setFilterOptionByStatus] = useState('all');\n  const [filterQuery, setFilterQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [appliedFilterQuery, setAppliedFilterQuery] = useState('');\n\n  const debounceAppliedQuery = useCallback(\n    debounce(setAppliedFilterQuery, 1000),\n    [],\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(response => {\n        setTodosFromServer(response);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterQuery={filterQuery}\n                onFilterQueryChange={setFilterQuery}\n                onDebounceAppliedQuery={debounceAppliedQuery}\n                filterOption={filterOptionByStatus}\n                onFilterOptionChange={setFilterOptionByStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {!isLoading && todosFromServer.length && (\n                <TodoList\n                  todos={todosFromServer}\n                  filterOption={filterOptionByStatus}\n                  filterQuery={appliedFilterQuery}\n                  onSelectTodo={setSelectedTodo}\n                  todoId={selectedTodo && selectedTodo.id}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onSelectTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}